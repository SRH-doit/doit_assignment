/* https://webclub.tistory.com/621 */

/* 전체 body를 flex로 설정하여 .circle을 가운데 배치시킵니다. */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}
/* 동그라미 형태로 나올 수 있도록 디자인합니다.
border-radius를 50%로 지정하면 원을 생성할 수 있습니다.
relative 속성을 넣어 작은 원의 기준을 정의합니다. */
.circle {
    position: relative;
    width: 400px;
    height: 400px;
    border: 3px dashed rebeccapurple;
    border-radius: 50%;
    animation: circle 5s infinite alternate ease-in-out;
    animation-play-state: paused;
}
/* 작은 원이 큰 원 기준으로 나올 수 있도록 제작합니다. */
/* ::after – 실제 내용 바로 뒤에서 생성되는 자식요소​ */
.circle::after {
    content: "";
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: rebeccapurple;
    display: block;
    position: absolute;
    left: calc(50% - 10px);
    top: -10px;
    animation: bg 5s infinite alternate ease-in-out;
    /* animation: name | duration | timing-function | delay | iteration-count | direction | fill-mode | play-state> [,...]; */
    /* alternate : 순방향으로 애니메이션을 시작해 역방향과 순방향으로 번갈아 애니메이션을 재생한다. 홀수 번째로 재생할 때는 순방향으로 재생하고, 짝수 번째로 재생할 때는 역방향으로 재생한다. */
    /* animation-timing-function:ease-in-out; 속성은 시작 부분의 재생 속도를 점점 빠르게 하고, 마지막 부분의 재생 속도를 점점 느리게 한 */
    animation-play-state: paused; 
    /* animation-play-state : 애니메이션을 멈추거나 다시 시작할 수 있습니다. */
}

.circle:hover {
    animation-play-state: running;
}

.circle:hover::after {
    animation-play-state: running;
}

@keyframes circle {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}
/* 애니메이션 이름 bg */
@keyframes bg {
    0% {
        background-color: rebeccapurple;
        transform: scale(2);
    }
    100% {
        background-color: rgb(46, 224, 255);
        transform: scale(0.1);
    }
}